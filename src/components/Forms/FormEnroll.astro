---
const CRM_FORM_WEBHOOK_URL = import.meta.env.JOIN_OUR_TEAM_FORM_WEBHOOK_URL;
const PORTAL_API_KEY = import.meta.env.PORTAL_API_KEY;
---

<!-- Booking Form Section --><!-- Booking Form Section -->
<div id="join-our-team" class="py-2 sm:py-6">
  <div class="mx-auto max-w-5xl px-6 lg:px-8">
    <!-- <div class="mx-auto max-w-2xl text-center">
      <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
        Enroll Now
      </h2>
      <p class="mt-6 text-lg leading-8 text-gray-600">
        Want to join Solid Ground Academy?
      </p>
    </div> -->

    <form
      class="mx-auto max-w-xl"
      name="join-our-team-form"
      id="join-our-team-form"
    >
      <div class="grid grid-cols-1 gap-x-6 gap-y-2 sm:grid-cols-2">
        <p class="hidden">
          <label
            >Don't fill this out if you're human: <input
              name="confirm-email"
            /></label
          >
        </p>

        <div>
          <label
            for="join-first-name"
            class="block text-sm font-semibold leading-6 text-gray-900"
            >First name *</label
          >
          <div class="mt-2.5">
            <input
              type="text"
              name="first-name"
              id="join-first-name"
              required
              autocomplete="given-name"
              class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="join-last-name"
            class="block text-sm font-semibold leading-6 text-gray-900"
            >Last name *</label
          >
          <div class="mt-2.5">
            <input
              type="text"
              name="last-name"
              id="join-last-name"
              required
              autocomplete="family-name"
              class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div class="sm:col-span-1">
          <label
            for="join-email"
            class="block text-sm font-semibold leading-6 text-gray-900"
            >Email *</label
          >
          <div class="mt-2.5">
            <input
              type="email"
              name="email"
              id="join-email"
              required
              autocomplete="email"
              class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div class="sm:col-span-1">
          <label
            for="join-phone"
            class="block text-sm font-semibold leading-6 text-gray-900"
            >Phone number *</label
          >
          <div class="mt-2.5">
            <input
              type="tel"
              name="phone"
              id="join-phone"
              required
              autocomplete="tel"
              class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div class="sm:col-span-2">
          <label
            for="join-additional-information"
            class="block text-sm font-semibold leading-6 text-gray-900"
            >Additional Information</label
          >
          <div class="mt-2.5 ">
            <textarea
              name="additional-information"
              id="join-additional-information"
              rows="3"
              class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"
              placeholder="Any additional information or questions you have"
              maxlength="800"></textarea>
          </div>
        </div>
      </div>

      <div class="flex gap-x-4 sm:col-span-1 mt-3">
        <div class="flex h-6 items-center">
          <button
            type="button"
            id="join-terms-toggle"
            class="flex w-8 flex-none cursor-pointer rounded-full p-px ring-1 ring-inset ring-primary-900/5 transition-colors duration-200 ease-in-out focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900 bg-gray-200"
            role="switch"
            aria-checked="false"
            aria-labelledby="join-switch-label"
          >
            <span class="sr-only">
              I agree to terms & conditions provided by the company.
            </span>
            <span
              id="join-terms-thumb"
              class="h-4 w-4 transform rounded-full bg-black shadow-sm ring-1 ring-gray-900/5 transition duration-200 ease-in-out translate-x-0"
              aria-hidden="true"></span>
          </button>
          <input
            type="hidden"
            id="join-agree-terms"
            name="agree-terms"
            value="no"
          />
        </div>
        <label class="text-sm leading-6 text-gray-800" id="join-switch-label">
          I agree to the <a
            href="/privacy-policy"
            target="_blank"
            class="text-primary-700 hover:text-mariner-700 font-semibold"
            >Privacy Policy</a
          > and <a
            href="/terms-of-service"
            target="_blank"
            class="text-primary-700 hover:text-mariner-700 font-semibold"
            >Terms of Service</a
          > provided by the company. By providing my phone number, I agree to receive
          text messages from the business.
        </label>
      </div>

      <div class="mt-5">
        <button
          type="submit"
          id="join-submit-btn"
          class="block w-full rounded-md bg-primary-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-primary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600 transition-colors duration-200"
        >
          Enroll Now
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  (function () {
    const CRM_FORM_WEBHOOK_URL =
      "https://services.leadconnectorhq.com/hooks/BodhdqLgy6TPfUwqXJ4W/webhook-trigger/G7X5yFU7Yl0gCrHV93UQ";
    const PORTAL_API_KEY =
      "bcd1f473f0c462773495a054bdd52c0a08b978923d44d43b5179b240bd778781";

    // Use unique IDs for the join our team form
    const toggle = document.getElementById("join-terms-toggle");
    const thumb = document.getElementById("join-terms-thumb");
    const hiddenInput = document.getElementById("join-agree-terms");
    const submitBtn = document.getElementById("join-submit-btn");
    const form = document.getElementById("join-our-team-form");

    if (!form || !toggle || !thumb || !hiddenInput || !submitBtn) {
      console.error(
        "One or more join our team form elements could not be found.",
      );
      return;
    }

    let isChecked = false;

    const handleToggleClick = () => {
      isChecked = !isChecked;
      hiddenInput.value = isChecked ? "yes" : "no";
      toggle.setAttribute("aria-checked", isChecked);

      // Toggle visual state
      if (isChecked) {
        toggle.classList.add("bg-primary-600");
        toggle.classList.remove("bg-gray-200");
        thumb.classList.add("translate-x-4");
        thumb.classList.remove("translate-x-0");
      } else {
        toggle.classList.remove("bg-primary-600");
        toggle.classList.add("bg-gray-200");
        thumb.classList.remove("translate-x-4");
        thumb.classList.add("translate-x-0");
      }

      // Update submit button
      submitBtn.disabled = !isChecked;
      if (isChecked) {
        submitBtn.classList.remove("cursor-not-allowed", "bg-gray-400");
        submitBtn.classList.add("bg-blue-600", "hover:bg-orange-400");
      } else {
        submitBtn.classList.add("cursor-not-allowed", "bg-gray-600");
        submitBtn.classList.remove("bg-blue-600", "hover:bg-orange-600");
      }
    };

    const handleFormSubmit = async (event) => {
      event.preventDefault();

      const formData = new FormData(form);
      const confirmEmail = formData.get("confirm-email")?.trim();
      if (confirmEmail) return;

      // Check if terms are agreed to
      if (!isChecked) {
        alert(
          "Please agree to the Privacy Policy and Terms of Service before submitting.",
        );
        return;
      }

      const webhookURL = CRM_FORM_WEBHOOK_URL;
      const apiKey = PORTAL_API_KEY;

      const urlEncodedBody = new URLSearchParams(formData).toString();

      const excludedFields = [
        "first-name",
        "last-name",
        "email",
        "phone",
        "confirm-email",
        "agree-terms",
      ];

      const metadata = {};
      for (const [key, value] of formData.entries()) {
        if (!excludedFields.includes(key)) {
          metadata[key] = value?.trim?.() ?? value;
        }
      }

      const jsonBody = {
        first_name: formData.get("first-name")?.trim() || "",
        last_name: formData.get("last-name")?.trim() || "",
        email: formData.get("email")?.trim() || "",
        phone: formData.get("phone")?.trim() || "",
        campaign: "join_our_team", // Fixed campaign name
        account_random_id: "ac_xdtdydg4",
        metadata,
      };

      try {
        submitBtn.disabled = true;
        submitBtn.textContent = "Submitting...";

        const [ghlRes, portalRes] = await Promise.all([
          fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: urlEncodedBody,
          }),
          fetch("https://portal.rightruddermarketing.com/api/leads", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json",
              "x-api-key": apiKey,
            },
            body: JSON.stringify(jsonBody),
          }),
        ]);

        if (ghlRes.ok && portalRes.ok) {
          window.location.href = "/contact-confirmation";
        } else {
          console.error("Submission failed", {
            ghlStatus: ghlRes.status,
            portalStatus: portalRes.status,
          });
          alert(
            "There was an error submitting your form. Please try again or contact us directly.",
          );
        }
      } catch (err) {
        console.error("Submission error:", err);
        alert(
          "There was an error submitting your form. Please try again or contact us directly.",
        );
      } finally {
        submitBtn.disabled = !isChecked;
        submitBtn.textContent = "Contact Us";
      }
    };

    // Attach event listeners
    toggle.addEventListener("click", handleToggleClick);
    form.addEventListener("submit", handleFormSubmit);

    // Set initial state
    submitBtn.disabled = true;
    submitBtn.classList.add("cursor-not-allowed", "bg-gray-400");
  })();
</script>
